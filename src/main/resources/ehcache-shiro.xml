<?xml version="1.0" encoding="UTF-8"?>
<ehcache>
    <diskStore path="java.io.tmpdir" />
    <defaultCache maxElementsInMemory="10000" eternal="false" timeToIdleSeconds="120" timeToLiveSeconds="120" overflowToDisk="true" />
    <cache name="webcache"  maxElementsInMemory="10000"  eternal="true"   overflowToDisk="false" />  
    <cache name="testcache" maxElementsInMemory="1000" eternal="false" timeToLiveSeconds="10" timeToIdleSeconds="8" overflowToDisk="true"/>
    <!-- token缓存，缓存时间为30分钟，可存放100000个元素 -->
    <cache name="tokencache"
		   eternal="false"
		   maxElementsInMemory="100000"
		   overflowToDisk="true"
		   diskPersistent="false"
		   timeToIdleSeconds="1800"
		   timeToLiveSeconds="1800"
		   memoryStoreEvictionPolicy="LFU"/>
		   
		   
	<!--

		配置自定义缓存
		maxElementsInMemory：缓存中允许创建的最大对象数
		eternal：缓存中对象是否为永久的，如果是，超时设置将被忽略，对象从不过期。
		timeToIdleSeconds：缓存数据的钝化时间，也就是在一个元素消亡之前，
		两次访问时间的最大时间间隔值，这只能在元素不是永久驻留时有效，
		如果该值是 0 就意味着元素可以停顿无穷长的时间。
		timeToLiveSeconds：缓存数据的生存时间，也就是一个元素从构建到消亡的最大时间间隔值，
		这只能在元素不是永久驻留时有效，如果该值是0就意味着元素可以停顿无穷长的时间。
		overflowToDisk：内存不足时，是否启用磁盘缓存。
		memoryStoreEvictionPolicy：缓存满了之后的淘汰算法。

	-->
	<!--首页面缓存时间1h 3600-->
	<cache name="SimplePageCachingFilter"
		   maxElementsInMemory="1000"
		   eternal="false"
		   overflowToDisk="true"
		   diskSpoolBufferSizeMB="100"
		   timeToIdleSeconds="3600"
		   diskPersistent="false"
		   timeToLiveSeconds="3600"
		   memoryStoreEvictionPolicy="LFU">
		   <!--listener-->
	       <cacheEventListenerFactory class="com.insigma.common.ehcache.PageCacheEventListenerFactory"/>
		<!--
	<cacheEventListenerFactory
		class="net.sf.ehcache.distribution.jgroups.JGroupsCacheReplicatorFactory"
		properties="replicateAsynchronously=true, replicatePuts=true,replicateUpdates=true, replicateUpdatesViaCopy=false, replicateRemovals=true" />
		-->
	</cache>
</ehcache>